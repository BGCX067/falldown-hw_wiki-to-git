#summary Setting up your environment

==Setup==
  # Download [http://www.eclipse.org/downloads/packages/eclipse-ide-java-developers/heliossr2 Eclipse IDE for Java Developers]
  # Install the Mercurial plugin in Eclipse:
    * Open Eclipse
    * Help > Install New Software
    * Add
      * Name: Mercurial
      * URL: http://cbes.javaforge.com/update
    * Select "MercurialEclipse"
    * Continue until it's installed and restart
  # Pull code from repository:
    * File... New Project
    * Mercurial > Clone Existing
    * Input the URL found in the "Source" section of this site
    * Input your email, and the password found in the "Source" section of this site (if you want to commit changes)
  
== Getting Familiar ==
  * You should see two projects in the package explorer pane:
    # GdxTest: The game, with an application launcher for the desktop
    # GdxTest-Android: The application launcher for android
  * All the game code is in GdxTest.  The GdxTest-Android is just an Android application that references the game code in GdxTest.
  * To run the game:
    # Right click "GdxTest" in the package explorer pane on the left
    # Run As > Java Application
    # If asked, select "GdxTestDesktop - com.gdx.test"
    # After the first time you've done this, you should be able to quickly run the game with the green play button in the toolbar.

==Committing Changes==
Everyone who clones the repository has a local copy of the entire history of the project on their computer.  So when you select the command to *commit* your changes, you're only updating your _local_ copy of the repository.  To update the googlecode repository, first *commit* the changes, then select the *push* command.

  # Right click project > Team
  # Select commit to commit the changed files to your local repo
  # Select push to push your local repo to google code

==Misc Notes==
  * Make sure to use the HTTPS url when pushing updates, or else you get a 403 Forbidden error
  * Make sure to use the special password found in the "Source" section of this site, not your gmail password
  * The long hex number after the project name in the workspace is the SHA-1 hash generated based on the content of the current branch.  The idea is that it will be unique for each step in the project.
  * 